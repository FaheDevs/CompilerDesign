/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class AT3T2 extends PT2
{
    private PT3 _t3_;

    public AT3T2()
    {
        // Constructor
    }

    public AT3T2(
        @SuppressWarnings("hiding") PT3 _t3_)
    {
        // Constructor
        setT3(_t3_);

    }

    @Override
    public Object clone()
    {
        return new AT3T2(
            cloneNode(this._t3_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAT3T2(this);
    }

    public PT3 getT3()
    {
        return this._t3_;
    }

    public void setT3(PT3 node)
    {
        if(this._t3_ != null)
        {
            this._t3_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._t3_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._t3_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._t3_ == child)
        {
            this._t3_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._t3_ == oldChild)
        {
            setT3((PT3) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
