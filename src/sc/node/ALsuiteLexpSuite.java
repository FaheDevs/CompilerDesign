/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ALsuiteLexpSuite extends PLexpSuite
{
    private TVirgule _virgule_;
    private PExp _exp_;
    private PLexpSuite _lexpSuite_;

    public ALsuiteLexpSuite()
    {
        // Constructor
    }

    public ALsuiteLexpSuite(
        @SuppressWarnings("hiding") TVirgule _virgule_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") PLexpSuite _lexpSuite_)
    {
        // Constructor
        setVirgule(_virgule_);

        setExp(_exp_);

        setLexpSuite(_lexpSuite_);

    }

    @Override
    public Object clone()
    {
        return new ALsuiteLexpSuite(
            cloneNode(this._virgule_),
            cloneNode(this._exp_),
            cloneNode(this._lexpSuite_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALsuiteLexpSuite(this);
    }

    public TVirgule getVirgule()
    {
        return this._virgule_;
    }

    public void setVirgule(TVirgule node)
    {
        if(this._virgule_ != null)
        {
            this._virgule_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._virgule_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public PLexpSuite getLexpSuite()
    {
        return this._lexpSuite_;
    }

    public void setLexpSuite(PLexpSuite node)
    {
        if(this._lexpSuite_ != null)
        {
            this._lexpSuite_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lexpSuite_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._virgule_)
            + toString(this._exp_)
            + toString(this._lexpSuite_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._virgule_ == child)
        {
            this._virgule_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._lexpSuite_ == child)
        {
            this._lexpSuite_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._virgule_ == oldChild)
        {
            setVirgule((TVirgule) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._lexpSuite_ == oldChild)
        {
            setLexpSuite((PLexpSuite) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
