/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class AInstbloc extends PInstbloc
{
    private TAccoladeOuvrante _accoladeOuvrante_;
    private PLinst _linst_;
    private TAccoladeFermante _accoladeFermante_;

    public AInstbloc()
    {
        // Constructor
    }

    public AInstbloc(
        @SuppressWarnings("hiding") TAccoladeOuvrante _accoladeOuvrante_,
        @SuppressWarnings("hiding") PLinst _linst_,
        @SuppressWarnings("hiding") TAccoladeFermante _accoladeFermante_)
    {
        // Constructor
        setAccoladeOuvrante(_accoladeOuvrante_);

        setLinst(_linst_);

        setAccoladeFermante(_accoladeFermante_);

    }

    @Override
    public Object clone()
    {
        return new AInstbloc(
            cloneNode(this._accoladeOuvrante_),
            cloneNode(this._linst_),
            cloneNode(this._accoladeFermante_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAInstbloc(this);
    }

    public TAccoladeOuvrante getAccoladeOuvrante()
    {
        return this._accoladeOuvrante_;
    }

    public void setAccoladeOuvrante(TAccoladeOuvrante node)
    {
        if(this._accoladeOuvrante_ != null)
        {
            this._accoladeOuvrante_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._accoladeOuvrante_ = node;
    }

    public PLinst getLinst()
    {
        return this._linst_;
    }

    public void setLinst(PLinst node)
    {
        if(this._linst_ != null)
        {
            this._linst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._linst_ = node;
    }

    public TAccoladeFermante getAccoladeFermante()
    {
        return this._accoladeFermante_;
    }

    public void setAccoladeFermante(TAccoladeFermante node)
    {
        if(this._accoladeFermante_ != null)
        {
            this._accoladeFermante_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._accoladeFermante_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._accoladeOuvrante_)
            + toString(this._linst_)
            + toString(this._accoladeFermante_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._accoladeOuvrante_ == child)
        {
            this._accoladeOuvrante_ = null;
            return;
        }

        if(this._linst_ == child)
        {
            this._linst_ = null;
            return;
        }

        if(this._accoladeFermante_ == child)
        {
            this._accoladeFermante_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._accoladeOuvrante_ == oldChild)
        {
            setAccoladeOuvrante((TAccoladeOuvrante) newChild);
            return;
        }

        if(this._linst_ == oldChild)
        {
            setLinst((PLinst) newChild);
            return;
        }

        if(this._accoladeFermante_ == oldChild)
        {
            setAccoladeFermante((TAccoladeFermante) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
