/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ATernop extends PTernop
{
    private TCrochetOuvrant _crochetOuvrant_;
    private PExp _exp_;
    private TCrochetFermant _crochetFermant_;
    private TPointIntero _pointIntero_;
    private PExp2 _exp2_;

    public ATernop()
    {
        // Constructor
    }

    public ATernop(
        @SuppressWarnings("hiding") TCrochetOuvrant _crochetOuvrant_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TCrochetFermant _crochetFermant_,
        @SuppressWarnings("hiding") TPointIntero _pointIntero_,
        @SuppressWarnings("hiding") PExp2 _exp2_)
    {
        // Constructor
        setCrochetOuvrant(_crochetOuvrant_);

        setExp(_exp_);

        setCrochetFermant(_crochetFermant_);

        setPointIntero(_pointIntero_);

        setExp2(_exp2_);

    }

    @Override
    public Object clone()
    {
        return new ATernop(
            cloneNode(this._crochetOuvrant_),
            cloneNode(this._exp_),
            cloneNode(this._crochetFermant_),
            cloneNode(this._pointIntero_),
            cloneNode(this._exp2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATernop(this);
    }

    public TCrochetOuvrant getCrochetOuvrant()
    {
        return this._crochetOuvrant_;
    }

    public void setCrochetOuvrant(TCrochetOuvrant node)
    {
        if(this._crochetOuvrant_ != null)
        {
            this._crochetOuvrant_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._crochetOuvrant_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TCrochetFermant getCrochetFermant()
    {
        return this._crochetFermant_;
    }

    public void setCrochetFermant(TCrochetFermant node)
    {
        if(this._crochetFermant_ != null)
        {
            this._crochetFermant_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._crochetFermant_ = node;
    }

    public TPointIntero getPointIntero()
    {
        return this._pointIntero_;
    }

    public void setPointIntero(TPointIntero node)
    {
        if(this._pointIntero_ != null)
        {
            this._pointIntero_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pointIntero_ = node;
    }

    public PExp2 getExp2()
    {
        return this._exp2_;
    }

    public void setExp2(PExp2 node)
    {
        if(this._exp2_ != null)
        {
            this._exp2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._crochetOuvrant_)
            + toString(this._exp_)
            + toString(this._crochetFermant_)
            + toString(this._pointIntero_)
            + toString(this._exp2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._crochetOuvrant_ == child)
        {
            this._crochetOuvrant_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._crochetFermant_ == child)
        {
            this._crochetFermant_ = null;
            return;
        }

        if(this._pointIntero_ == child)
        {
            this._pointIntero_ = null;
            return;
        }

        if(this._exp2_ == child)
        {
            this._exp2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._crochetOuvrant_ == oldChild)
        {
            setCrochetOuvrant((TCrochetOuvrant) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._crochetFermant_ == oldChild)
        {
            setCrochetFermant((TCrochetFermant) newChild);
            return;
        }

        if(this._pointIntero_ == oldChild)
        {
            setPointIntero((TPointIntero) newChild);
            return;
        }

        if(this._exp2_ == oldChild)
        {
            setExp2((PExp2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
