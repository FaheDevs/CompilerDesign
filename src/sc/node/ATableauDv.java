/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ATableauDv extends PDv
{
    private TType _type_;
    private TIdentif _identif_;
    private TCrochetOuvrant _crochetOuvrant_;
    private TNombre _nombre_;
    private TCrochetFermant _crochetFermant_;

    public ATableauDv()
    {
        // Constructor
    }

    public ATableauDv(
        @SuppressWarnings("hiding") TType _type_,
        @SuppressWarnings("hiding") TIdentif _identif_,
        @SuppressWarnings("hiding") TCrochetOuvrant _crochetOuvrant_,
        @SuppressWarnings("hiding") TNombre _nombre_,
        @SuppressWarnings("hiding") TCrochetFermant _crochetFermant_)
    {
        // Constructor
        setType(_type_);

        setIdentif(_identif_);

        setCrochetOuvrant(_crochetOuvrant_);

        setNombre(_nombre_);

        setCrochetFermant(_crochetFermant_);

    }

    @Override
    public Object clone()
    {
        return new ATableauDv(
            cloneNode(this._type_),
            cloneNode(this._identif_),
            cloneNode(this._crochetOuvrant_),
            cloneNode(this._nombre_),
            cloneNode(this._crochetFermant_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATableauDv(this);
    }

    public TType getType()
    {
        return this._type_;
    }

    public void setType(TType node)
    {
        if(this._type_ != null)
        {
            this._type_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._type_ = node;
    }

    public TIdentif getIdentif()
    {
        return this._identif_;
    }

    public void setIdentif(TIdentif node)
    {
        if(this._identif_ != null)
        {
            this._identif_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identif_ = node;
    }

    public TCrochetOuvrant getCrochetOuvrant()
    {
        return this._crochetOuvrant_;
    }

    public void setCrochetOuvrant(TCrochetOuvrant node)
    {
        if(this._crochetOuvrant_ != null)
        {
            this._crochetOuvrant_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._crochetOuvrant_ = node;
    }

    public TNombre getNombre()
    {
        return this._nombre_;
    }

    public void setNombre(TNombre node)
    {
        if(this._nombre_ != null)
        {
            this._nombre_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._nombre_ = node;
    }

    public TCrochetFermant getCrochetFermant()
    {
        return this._crochetFermant_;
    }

    public void setCrochetFermant(TCrochetFermant node)
    {
        if(this._crochetFermant_ != null)
        {
            this._crochetFermant_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._crochetFermant_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._type_)
            + toString(this._identif_)
            + toString(this._crochetOuvrant_)
            + toString(this._nombre_)
            + toString(this._crochetFermant_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._type_ == child)
        {
            this._type_ = null;
            return;
        }

        if(this._identif_ == child)
        {
            this._identif_ = null;
            return;
        }

        if(this._crochetOuvrant_ == child)
        {
            this._crochetOuvrant_ = null;
            return;
        }

        if(this._nombre_ == child)
        {
            this._nombre_ = null;
            return;
        }

        if(this._crochetFermant_ == child)
        {
            this._crochetFermant_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._type_ == oldChild)
        {
            setType((TType) newChild);
            return;
        }

        if(this._identif_ == oldChild)
        {
            setIdentif((TIdentif) newChild);
            return;
        }

        if(this._crochetOuvrant_ == oldChild)
        {
            setCrochetOuvrant((TCrochetOuvrant) newChild);
            return;
        }

        if(this._nombre_ == oldChild)
        {
            setNombre((TNombre) newChild);
            return;
        }

        if(this._crochetFermant_ == oldChild)
        {
            setCrochetFermant((TCrochetFermant) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
